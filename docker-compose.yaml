services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - mock_postgres
    volumes:
      - ./alembic/versions:/app/alembic/versions
      - ./uploads:/app/uploads
    environment:
      USE_MOCK_DB: ${USE_MOCK_DB}

  frontend:
    build:
      context: ./react-forum
    ports:
        - "5173:5173"

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  mock_postgres:
    image: postgres:14-alpine
    container_name: mock_postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${MOCK_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MOCK_POSTGRES_PASSWORD}
      POSTGRES_DB: ${MOCK_POSTGRES_DB}

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - mock_postgres

  selenium:
    image: selenium/standalone-firefox:latest
    container_name: selenium
    ports:
      - "4444:4444"
      - "5900:5900"
    environment:
      - VNC_PASSWORD=password
    shm_size: 2g

  master:
    build:
      context: ./locust
    ports:
      - "8089:8089"
    command: locust -f /app/locustfile.py --master -H http://web:8000  # Command for master

  worker:
    build:
      context: ./locust
    command: locust -f /app/locustfile.py --worker --master-host=master  # Command for worker


#  redis:
#    image: redis:latest
#    restart: always
#    ports:
#      - "6379:6379"
#
#  rabbitmq:
#    image: rabbitmq:3-management
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    environment:
#      RABBITMQ_DEFAULT_USER: user
#      RABBITMQ_DEFAULT_PASS: password
#    healthcheck:
#      test: [ "CMD", "rabbitmqctl", "status" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  celery_worker:
#    build:
#      context: .
#    command: celery -A celery_package.celery_main.celery worker --loglevel=info
#    environment:
#      CELERY_BROKER_URL: amqp://user:password@rabbitmq:5672//
#      CELERY_RESULT_BACKEND: rpc://
#    depends_on:
#      - rabbitmq
#
#  celery_beat:
#    build:
#      context: .
#    command: celery -A celery_package.celery_main.celery beat --loglevel=DEBUG
#    environment:
#      CELERY_BROKER_URL: amqp://user:password@rabbitmq:5672//
#      CELERY_RESULT_BACKEND: rpc://
#    depends_on:
#      - rabbitmq

#  dashboard:
#    build:
#      context: .
#    command: celery -A celery_package.celery_main.celery flower --broker=amqp://user:password@rabbitmq:5672// --port=5555
#    ports:
#      - "5556:5555"
#    env_file:
#      - .env
#    depends_on:
#      - web
#      - rabbitmq

#  nginx:
#    container_name: 'nginx-service'
#    build:
#      context: .
#      dockerfile: docker/nginx.Dockerfile
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - ./config:/config
#      - /etc/letsencrypt:/etc/letsencrypt:ro
#      - /tmp/acme_challenge:/tmp/acme_challenge
#    depends_on:
#      - web
#    restart: always

