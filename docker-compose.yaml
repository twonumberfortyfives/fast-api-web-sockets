services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./alembic/versions:/app/alembic/versions
      - ./uploads:/app/uploads

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "agora"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5

  celery_worker:
    build:
      context: .
    command: celery -A celery_package.celery_main.celery worker --loglevel=info
    environment:
      CELERY_BROKER_URL: amqp://user:password@rabbitmq:5672//
      CELERY_RESULT_BACKEND: rpc://
    depends_on:
      - rabbitmq

  celery_beat:
    build:
      context: .
    command: celery -A celery_package.celery_main.celery beat --loglevel=DEBUG
    environment:
      CELERY_BROKER_URL: amqp://user:password@rabbitmq:5672//
      CELERY_RESULT_BACKEND: rpc://
    depends_on:
      - rabbitmq

  dashboard:
    build:
      context: .
    command: celery -A celery_package.celery_main.celery flower --broker=amqp://user:password@rabbitmq:5672// --port=5555
    ports:
      - "5556:5555"
    env_file:
      - .env
    depends_on:
      - web
      - rabbitmq

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web
    restart: always
